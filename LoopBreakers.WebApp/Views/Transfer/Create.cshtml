@model LoopBreakers.WebApp.DTOs.TransferPerformDTO
@using LoopBreakers.DAL.Enums

@{
    ViewData["Title"] = "Create";
    
}

<h1>Nowy przelew</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserSurname" class="control-label"></label>
                <input asp-for="UserSurname" class="form-control" />
                <span asp-validation-for="UserSurname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Iban" class="control-label"></label>
                <input asp-for="Iban" class="form-control" />
                <span asp-validation-for="Iban" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FromId" class="control-label"></label>
                <input asp-for="FromId" class="form-control" />
                <span asp-validation-for="FromId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" asp-items="Html.GetEnumSelectList<TransferType>()" class="form-control">
                    <option selected="selected" value="">Please select</option>
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="Created" type="hidden" value=@DateTime.Now class="form-control" />
                <span asp-validation-for="Created" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Reference" class="control-label"></label>
                <input asp-for="Reference" class="form-control" />
                <span asp-validation-for="Reference" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Currency" class="control-label"></label>
                <select asp-for="Currency" asp-items="Html.GetEnumSelectList<Currency>()" class="form-control">
                    <option selected="selected" value="">Please select</option>
                </select>                <span asp-validation-for="Currency" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Analuj transfer</a>
</div>
@{
    if (ViewBag.NotEnoughMoney)
    {
        <script>
            alert("Zbyt malo srodkow na koncie");
        </script>
    }
    if(ViewBag.WrongUser)
     {
        <script>
            alert("Uzytkownik z takim nazwiskiem nie zostal znaleziony");
        </script>
    }
}


@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
